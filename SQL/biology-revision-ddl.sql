DROP TABLE IF EXISTS topicquestion;
DROP TABLE IF EXISTS testquestion;
DROP TABLE IF EXISTS test;
DROP TABLE IF EXISTS student;
DROP TABLE IF EXISTS option;
DROP TABLE IF EXISTS question;
DROP TABLE IF EXISTS topic;
DROP TABLE IF EXISTS module;


CREATE TABLE question (
	question_id INT GENERATED BY DEFAULT AS IDENTITY,
	question_text VARCHAR(50000),
	image_ref VARCHAR(10000),

	PRIMARY KEY (question_id)
);

CREATE TABLE option (
	option_id INT GENERATED BY DEFAULT AS IDENTITY,
	question_id INT,
	option_text VARCHAR(10000),
	correct BOOLEAN,

	PRIMARY KEY (option_id),
	CONSTRAINT fk_question
		FOREIGN KEY(question_id)
			REFERENCES question(question_id)
);

CREATE TABLE module (
	module_id INT GENERATED BY DEFAULT AS IDENTITY,
	module_num INT,

	PRIMARY KEY (module_id)
);

CREATE TABLE topic (
	topic_id INT GENERATED BY DEFAULT AS IDENTITY,
	module_id INT,
	topic_name VARCHAR(10000),

	PRIMARY KEY (topic_id),
	CONSTRAINT fk_module
		FOREIGN KEY(module_id)
			REFERENCES module(module_id)
);

CREATE TABLE topicquestion (
	question_id INT,
	topic_id INT,

	PRIMARY KEY (question_id, topic_id),
	CONSTRAINT fk_question
		FOREIGN KEY(question_id)
			REFERENCES question(question_id),
	CONSTRAINT fk_topic
		FOREIGN KEY(topic_id)
			REFERENCES topic(topic_id)
);

CREATE TABLE student (
	student_id INT GENERATED BY DEFAULT AS IDENTITY,
	first_name VARCHAR(500),
	last_name VARCHAR(500),
	email VARCHAR(5000),

	PRIMARY KEY (student_id)
);

CREATE TABLE test (
	test_id INT GENERATED BY DEFAULT AS IDENTITY,
	student_id INT,
	points_earned INT,
	num_questions INT,
	topic_id INT,
	complete BOOLEAN,
	create_time TIMESTAMP WITH TIME ZONE,
	complete_time TIMESTAMP WITH TIME ZONE,

	PRIMARY KEY (test_id),
	CONSTRAINT fk_student
		FOREIGN KEY(student_id)
			REFERENCES student(student_id),
	CONSTRAINT fk_topic
		FOREIGN KEY(topic_id)
			REFERENCES topic(topic_id)
);

CREATE TABLE testquestion (
	question_id INT,
	test_id INT,
	question_num INT,
	option_id INT,
	update_time TIMESTAMP WITH TIME ZONE,

	PRIMARY KEY (test_id, question_id),
	CONSTRAINT fk_test
		FOREIGN KEY(test_id)
			REFERENCES test(test_id),
	CONSTRAINT fk_question
		FOREIGN KEY(question_id)
			REFERENCES question(question_id)
);
